#http://stackoverflow.com/questions/31721298/spring-boot-1-2-5-release-sending-e-mail-via-gmail-smtp
spring.mail.host = smtp.gmail.com
spring.mail.username = hyoseop@synapsetech.co.kr
spring.mail.password = dhqlfkrj
spring.mail.port = 465
spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback = false
spring.mail.properties.mail.smtp.ssl.enable = true
#spring.jackson.serialization-inclusion=always|non_null|non_absent|non_default|non_empty
spring.jackson.date-format=yyyy-MM-dd HH:mm
spring.jackson.time-zone=Asia/Seoul
# https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
server.port=8084
#서버 톰캣에서 로그인후 302 에러가 계속 발생하여 일단 아래 주석
#
#security.basic.enabled=false
# DATA REST (RepositoryRestProperties)
# Base path to be used by Spring Data REST to expose repository resources.
spring.data.rest.base-path=/crud
#spring.data.rest.base-path='http://192.168.1.10:8080/api/'
#spring.data.rest.default-page-size= # Default size of pages.
#spring.data.rest.enable-enum-translation= # Enable enum value translation via the Spring Data REST default resource bundle.
#spring.data.rest.limit-param-name= # Name of the URL query string parameter that indicates how many results to return at once.
#spring.data.rest.max-page-size= # Maximum size of pages.
#spring.data.rest.page-param-name= # Name of the URL query string parameter that indicates what page to return.
#spring.data.rest.return-body-on-create= # Return a response body after creating an entity.
#spring.data.rest.return-body-on-update= # Return a response body after updating an entity.
#spring.data.rest.sort-param-name= # Name of the URL query string parameter that indicates what direction to sort results.
#spring.data.rest.baseUri=api
#spring.data.rest.base-uri=api

# http://docs.spring.io/spring-data/rest/docs/current/reference/html/
# 요건 안먹힘 spring.data.rest.basePath=/api
#http://stackoverflow.com/questions/22024716/spring-data-rest-base-path
# 요건 먹히는듯 spring.data.rest.baseUri=/api
# 요건 있으면 에러 잔뜩 server.servlet-path=/api
#
# https://spring.io/guides/gs/uploading-files/
multipart.maxFileSize: 10Mb
multipart.maxRequestSize: 10Mb
#
spring.template.cache=false
spring.thymeleaf.cache=false
#http://stackoverflow.com/questions/30118683/how-to-log-sql-statements-in-spring-boot
logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.SQL=TRACE
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
spring.jpa.database=mysql
# http://docs.spring.io/spring-boot/docs/current/reference/html/howto-logging.html
logging.level.org.springframework.web=INFO
#logging.level.org.hibernate=DEBUG
#logging.level.org.h2.server: DEBUG
#
#spring:
#    view:
#        prefix: /WEB-INF/jsp/
#        suffix: .jsp

#https://github.com/netgloo/spring-boot-samples/blob/master/spring-boot-mysql-springdatajpa-hibernate/src/main/resources/application.properties
# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "netgloo_blog"
#spring.datasource.url=jdbc:mysql://192.168.1.55:3306/cleanbank?autoReconnect=true&useUnicode=true&characterEncoding=utf8
#spring.datasource.url=jdbc:mysql://192.168.1.55:3306/springbootdb?autoReconnect=true&useUnicode=true&characterEncoding=utf8
#spring.datasource.url=jdbc:mysql://localhost:3306/cleanbank?autoReconnect=true&useUnicode=true&characterEncoding=utf8
spring.datasource.url=jdbc:mysql://localhost:3306/cleanbank?useUnicode=true&characterEncoding=utf8&useSSL=false

# Username and password
spring.datasource.username=cleanbank
spring.datasource.password=cleanbank

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query : log4j와 중복되어 출력되는 경우가 생김(log를 통하여 출력하게 되면 원래 중복 출력된다고 함)
#spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
#spring.jpa.hibernate.ddl-auto=create-drop
# none, validate, update, create-drop
#spring.jpa.hibernate.ddl-auto=validate
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.ddl-auto=none

#http://blog.leekyoungil.com/?p=230
# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
#http://stackoverflow.com/questions/19146246/hibernate-naming-strategy
spring.jpa.hibernate.naming_strategy: org.hibernate.cfg.EJB3NamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect
#MySQLInnoDBDialect
#http://stackoverflow.com/questions/25720396/how-to-set-hibernate-format-sql-in-spring-boot
spring.jpa.properties.hibernate.format_sql=true
spring.datasource.driverClassName=com.mysql.jdbc.Driver